<Activity mc:Ignorable="sap sap2010" x:Class="SendEmail" this:SendEmail.in_UseMerkitTemplate="True" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_To" Type="InArgument(x:String)" />
    <x:Property Name="in_Subject" Type="InArgument(x:String)" />
    <x:Property Name="in_Body" Type="InArgument(x:String)" />
    <x:Property Name="in_Attachments" Type="InArgument(s:String[])" />
    <x:Property Name="in_Cc" Type="InArgument(x:String)" />
    <x:Property Name="in_Bcc" Type="InArgument(x:String)" />
    <x:Property Name="in_IsBodyHtml" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_SmtpServer" Type="InArgument(x:String)" />
    <x:Property Name="in_SmtpFrom" Type="InArgument(x:String)" />
    <x:Property Name="in_SenderType" Type="InArgument(x:Int32)" />
    <x:Property Name="in_SmtpPort" Type="InArgument(x:Int32)" />
    <x:Property Name="in_SmtpEnableSsl" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_SmtpHostEmail" Type="InArgument(x:String)" />
    <x:Property Name="in_SentOnBehalfOf" Type="InArgument(x:String)" />
    <x:Property Name="in_outLookAccount" Type="InArgument(x:String)" />
    <x:Property Name="in_CredentialAssetName" Type="InArgument(x:String)" />
    <x:Property Name="in_AssetFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_UseMerkitTemplate" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_MsgTable" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1331.2,1339.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Send Email via Outlook or  SMTP&#xA;Preconditions: - arguments &#xA;                        - Installed Outlook/Notes" DisplayName="SendEmail" sap:VirtualizedContainerService.HintSize="559.2,1274.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="smtpHostName" />
      <Variable x:TypeArguments="ss:SecureString" Name="smtpHostPassword" />
      <Variable x:TypeArguments="x:String" Name="emailTemplate" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" FileName="Framework\\Framework.Core\\EmailTemplate\\finalizerEmailTemaplate.html" sap:VirtualizedContainerService.HintSize="496.8,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
      <ui:ReadTextFile.Content>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">emailTemplate</CSharpReference>
        </OutArgument>
      </ui:ReadTextFile.Content>
    </ui:ReadTextFile>
    <Switch x:TypeArguments="x:Int32" DisplayName="Switch" sap:VirtualizedContainerService.HintSize="496.8,981.6" sap2010:WorkflowViewState.IdRef="Switch`1_1">
      <Switch.Expression>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">in_SenderType</CSharpValue>
        </InArgument>
      </Switch.Expression>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence x:Key="1" DisplayName="SMTP" sap:VirtualizedContainerService.HintSize="449.6,642.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="387.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info">
          <ui:LogMessage.Message>
            <InArgument x:TypeArguments="x:Object">
              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">"#Send SMTP email"</CSharpValue>
            </InArgument>
          </ui:LogMessage.Message>
        </ui:LogMessage>
        <ui:GetRobotCredential TimeoutMS="{x:Null}" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="387.2,143.2" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1">
          <ui:GetRobotCredential.AssetName>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">in_CredentialAssetName</CSharpValue>
            </InArgument>
          </ui:GetRobotCredential.AssetName>
          <ui:GetRobotCredential.FolderPath>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">in_AssetFolder</CSharpValue>
            </InArgument>
          </ui:GetRobotCredential.FolderPath>
          <ui:GetRobotCredential.Password>
            <OutArgument x:TypeArguments="ss:SecureString">
              <CSharpReference x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">smtpHostPassword</CSharpReference>
            </OutArgument>
          </ui:GetRobotCredential.Password>
          <ui:GetRobotCredential.Username>
            <OutArgument x:TypeArguments="x:String">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">smtpHostName</CSharpReference>
            </OutArgument>
          </ui:GetRobotCredential.Username>
        </ui:GetRobotCredential>
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="string customBody;&#xA;&#xA;if(useMerkitTemplate)&#xA;{&#xA;&#x9;customBody = emailTemplate.Replace(&quot;$description_PlaceHolder$&quot;,body).Replace(&quot;$table_PlaceHolder$&quot;,msgTable);&#xA;}else&#xA;{&#xA;&#x9;customBody = body;&#xA;}&#xA;&#xA;&#xA;&#xA;CustomFunctions.SendSMTPEmail(customBody,isBodyHtml,subject,to,cc,bcc,port,host,enableSsl,hostEmail,hostUserName,hostPassword);" DisplayName="Send SMTP Email - Invoke Code" sap:VirtualizedContainerService.HintSize="387.2,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
          <ui:InvokeCode.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="body">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">in_Body</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:Boolean" x:Key="isBodyHtml">
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">in_IsBodyHtml</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="subject">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">in_Subject</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="to">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">in_To</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="cc">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">in_Cc</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="bcc">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">in_Bcc</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="port">
              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">in_SmtpPort</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="host">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">in_SmtpServer</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:Boolean" x:Key="enableSsl">
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">in_SmtpEnableSsl</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="hostEmail">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">in_SmtpHostEmail</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="hostUserName">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">smtpHostName</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="ss:SecureString" x:Key="hostPassword">
              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">smtpHostPassword</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:Boolean" x:Key="useMerkitTemplate">
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">in_UseMerkitTemplate</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="emailTemplate">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">emailTemplate</CSharpValue>
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="msgTable">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">in_MsgTable</CSharpValue>
            </InArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
      </Sequence>
      <Sequence x:Key="2" DisplayName="Outlook" sap:VirtualizedContainerService.HintSize="449.6,770.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="387.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
          <ui:LogMessage.Message>
            <InArgument x:TypeArguments="x:Object">
              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">"#Send Outlook email"</CSharpValue>
            </InArgument>
          </ui:LogMessage.Message>
        </ui:LogMessage>
        <If DisplayName="Text/Html Body:" sap:VirtualizedContainerService.HintSize="387.2,476" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">! in_IsBodyHtml</CSharpValue>
            </InArgument>
          </If.Condition>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:SendOutlookMail ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Send Outlook Mail Message (Text)" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal">
              <ui:SendOutlookMail.Account>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">in_outLookAccount</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.Account>
              <ui:SendOutlookMail.AttachmentsCollection>
                <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                  <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">in_Attachments</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.AttachmentsCollection>
              <ui:SendOutlookMail.Bcc>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">in_Bcc</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.Bcc>
              <ui:SendOutlookMail.Body>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">in_Body</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.Body>
              <ui:SendOutlookMail.Cc>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">in_Cc</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.Cc>
              <ui:SendOutlookMail.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </ui:SendOutlookMail.Files>
              <ui:SendOutlookMail.SentOnBehalfOfName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">in_SentOnBehalfOf</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.SentOnBehalfOfName>
              <ui:SendOutlookMail.Subject>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">in_Subject</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.Subject>
              <ui:SendOutlookMail.To>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">in_To</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.To>
            </ui:SendOutlookMail>
          </If.Then>
          <If.Else>
            <ui:SendOutlookMail ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Send Outlook Mail Message (HTML)" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal">
              <ui:SendOutlookMail.Account>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">in_outLookAccount</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.Account>
              <ui:SendOutlookMail.AttachmentsCollection>
                <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                  <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">in_Attachments</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.AttachmentsCollection>
              <ui:SendOutlookMail.Bcc>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">in_Bcc</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.Bcc>
              <ui:SendOutlookMail.Body>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">in_Body</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.Body>
              <ui:SendOutlookMail.Cc>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">in_Cc</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.Cc>
              <ui:SendOutlookMail.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </ui:SendOutlookMail.Files>
              <ui:SendOutlookMail.SentOnBehalfOfName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">in_SentOnBehalfOf</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.SentOnBehalfOfName>
              <ui:SendOutlookMail.Subject>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">in_Subject</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.Subject>
              <ui:SendOutlookMail.To>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">in_To</CSharpValue>
                </InArgument>
              </ui:SendOutlookMail.To>
            </ui:SendOutlookMail>
          </If.Else>
        </If>
      </Sequence>
    </Switch>
  </Sequence>
</Activity>